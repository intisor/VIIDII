@page
@using FutaMeetWeb.Models
@model FutaMeetWeb.Pages.CreateSessionModel
@{
    ViewData["Title"] = "Create Session - FutaMeet";
}
<div class="container mt-4">
    <h2 class="text-center mb-4 modern-heading">Create a Session </h2>
    <div id="main-content">
        @if (string.IsNullOrEmpty(Model.CurrentSessionId))
        {
            <form method="post" class="modern-form p-4 mb-4">
                <div class="mb-3">
                    <label asp-for="Title" class="form-label modern-label">Session Title</label>
                    <input asp-for="Title" class="form-control modern-input" required />
                </div>
                <button type="submit" class="btn btn-skeuo w-100">
                    <i class="fas fa-plus-circle"></i> Create Session
                </button>
            </form>
        }
        @if (!string.IsNullOrEmpty(Model.Message) && (Model.CurrentSessionId != null) && Model.Session?.Status != SessionStatus.Ended)
        {
            <div class="row mt-4">
                <div class="col-md-8">
                    @if (Model.IsSessionLecturer)
                    {
                        <video id="sessionVideo" data-session-id="@Model.CurrentSessionId" autoplay muted class="modern-video" style="width: 100%; max-height: 400px; background: black;"></video>
                        <div class="d-flex gap-2 mt-2" id="sessionControls">
                            @if (!Model.IsSessionStarted)
                            {
                                <form id="startSessionForm" method="post" asp-page-handler="StartSession" class="w-100">
                                    <input type="hidden" name="sessionId" value="@Model.CurrentSessionId" />
                                    <button id="startSession" class="btn btn-skeuo flex-fill" type="submit">
                                        <i class="fas fa-play"></i> Start Session
                                    </button>
                                </form>
                            }
                            else
                            {
                                <form id="endSessionForm" method="post" asp-page-handler="EndSession" class="d-flex gap-2 mt-2">
                                    <input type="hidden" name="sessionId" value="@Model.CurrentSessionId" />
                                    <button type="submit" class="btn btn-skeuo flex-fill">
                                        <i class="fas fa-stop"></i> End Session
                                    </button>
                                    <button id="toggleAudio" class="btn btn-skeuo flex-fill" type="button" onclick="toggleAudio()">
                                        <i class="fas fa-microphone-slash"></i> Mute
                                    </button>
                                </form>
                            }
                        </div>
                    }
                </div>
                <div class="col-md-4">
                    <h4 class="modern-heading">Chat</h4>
                    <div id="chatMessages" class="border rounded p-2 modern-chat" style="height: 300px; overflow-y: auto;"></div>
                    <div class="input-group mt-2">
                        <textarea id="chatInput" rows="2" class="form-control modern-input" placeholder="Type a message..."></textarea>
                        <button id="sendMessage" class="btn btn-skeuo">
                            <i class="fas fa-paper-plane"></i> Send
                        </button>
                    </div>
                </div>
            </div>
        }
        @if (!string.IsNullOrEmpty(Model.Message))
        {
            <p class="mt-3 text-center modern-status" id="statusMessage">@Model.Message</p>
        }
    </div>
</div>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" rel="stylesheet" />
<link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="~/css/site.css" rel="stylesheet" />
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://unpkg.com/peerjs@1.5.4/dist/peerjs.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.7/signalr.min.js"></script>
<script src="~/js/session.js"></script>
@section Scripts {
    <script>  
       function toggleAudio() {  
           const stream = window.localStream;  
           if (stream) {  
               const audioTracks = stream.getAudioTracks();  
               for (const track of audioTracks) {  
                   track.enabled = !track.enabled;  
                   const button = document.getElementById("toggleAudio");  
                   if (button) {  
                       button.innerHTML = track.enabled  
                           ? '<i class="fas fa-microphone-slash"></i> Mute'  
                           : '<i class="fas fa-microphone"></i> Unmute';  
                   }  
               }  
           }  
       }  
    </script>
}
<script>
    // Pass session state to session.js
    window.sessionState = @Html.Raw(Json.Serialize(new
        {
            isSessionStarted = Model.IsSessionStarted,
            sessionId = Model.CurrentSessionId
        }));
    console.log("Session state set:", window.sessionState);
</script>
<script>
    // Expose IsSessionLecturer to JavaScript
    window.isSessionLecturer = @Json.Serialize(Model.IsSessionLecturer);
</script>